name: CodeQL Analysis

on:
  push:
    branches: [ "main" ]  # Jalankan pada push ke branch utama
  pull_request:
    branches: [ "main" ]  # Jalankan pada pull request ke branch utama
  schedule:
    - cron: '0 0 * * 0'  # Jalankan setiap minggu

jobs:
  analyze:
    name: Analyze CodeQL
    runs-on: ubuntu-latest  # Gunakan runner berbasis Linux

    permissions:
      actions: read
      contents: read
      security-events: write

    steps:
    # Langkah 1: Checkout kode dari repositori
    - name: Checkout repository
      uses: actions/checkout@v2  # Checkout kode dari repositori GitHub

    # Langkah 2: Set up .NET SDK (gunakan versi 8.0)
    - name: Set up .NET SDK
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: '8.0'  # Tentukan versi .NET SDK yang digunakan

    # Langkah 3: Restore dependensi .NET
    - name: Restore dependencies
      run: dotnet restore  # Restore dependensi .NET

    # Langkah 4: Build kode .NET
    - name: Build the code
      run: dotnet build --configuration Release  # Build proyek .NET

    # Langkah 5: Verifikasi hasil build
    - name: Verify build output
      run: |
        echo "Menampilkan file hasil build"
        ls -R $(pwd)  # Menampilkan file-file di dalam direktori kerja

    # Langkah 6: Inisialisasi CodeQL
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v2
      with:
        languages: csharp  # Tentukan bahasa yang akan dianalisis, di sini C#

    # Langkah 7: Lakukan analisis CodeQL
    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v2  # Lakukan analisis CodeQL

    # Langkah 8: Laporan analisis CodeQL
    - name: Upload CodeQL results
      if: always()  # Upload hasil analisis meskipun terjadi kegagalan
      uses: github/codeql-action/upload-results@v2
      with:
        upload-database: true
        wait-for-processing: true
